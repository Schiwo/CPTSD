import openai
import pandas as pd
import argparse

from openai import OpenAI
from prompts.prompts_zeroshot import zeroshot_short_en_1


def zeroshot(df):

    client = OpenAI(api_key=api_key)

    # Check if 'Statement' and 'Ground-truth label' columns exist in the data
    if "Statement" in df.columns and "Ground-truth label" in df.columns:
        # Initialize the columns for estimated symptom and section
        df["Estimation"] = ""

        for idx, row in df.iterrows():
            try:

                model = "gpt-4"

                messages = zeroshot_short_en_1
                messages[-1]["content"] += row["Statement"]

                response = client.chat.completions.create(
                    model=model, messages=messages
                )

                df.loc[idx, "Estimation"] = response.choices[0].message.content

            except openai.error.InvalidRequestError:
                df.loc[idx, "Estimation"] = "Error"

        # Save the dataframe to a new excel file
        df.to_excel(f"{gpt_result_filename}.xlsx", index=False)
    else:
        print("No 'Statement' or 'Symptom' column found in the data.")


if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        description="Estimate Symptom and Section with Zero-shot Inference"
    )
    parser.add_argument(
        "--data",
        help="Data File After Label Extraction with Excel Format",
        required=True,
    )
    parser.add_argument("--apikey", help="Your openai api key", required=True)
    parser.add_argument(
        "--result", help="Filename of the output generated by GPT", required=True
    )

    args = parser.parse_args()
    data_filename = args.data
    api_key = args.apikey
    gpt_result_filename = args.result

    # zero-shot inference
    data = pd.read_excel(f"{data_filename}.xlsx")
    zeroshot(data)
